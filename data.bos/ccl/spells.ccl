;;       _________ __                 __                               
;;      /   _____//  |_____________ _/  |______     ____  __ __  ______
;;      \_____  \\   __\_  __ \__  \\   __\__  \   / ___\|  |  \/  ___/
;;      /        \|  |  |  | \// __ \|  |  / __ \_/ /_/  >  |  /\___ \ 
;;     /_______  /|__|  |__|  (____  /__| (____  /\___  /|____//____  >
;;             \/                  \/          \//_____/            \/ 
;;  ______________________                           ______________________
;;			  T H E   W A R   B E G I N S
;;	   Stratagus - A free fantasy real time strategy game engine
;;
;;	stratagus.ccl	-	The craft configuration language.
;;
;;	(c) Copyright 1998-2003 by Joris Dauphin.
;;
;;      This program is free software; you can redistribute it and/or modify
;;      it under the terms of the GNU General Public License as published by
;;      the Free Software Foundation; either version 2 of the License, or
;;      (at your option) any later version.
;;  
;;      This program is distributed in the hope that it will be useful,
;;      but WITHOUT ANY WARRANTY; without even the implied warranty of
;;      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;      GNU General Public License for more details.
;;  
;;      You should have received a copy of the GNU General Public License
;;      along with this program; if not, write to the Free Software
;;      Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
;;
;;	$Id$

;; For documentation see stratagus/doc/ccl/ccl.html ;; FIXME write and move doc.

;;		// Warning, Some names and specifications should be changed
;;		// Todo parameter coherency ? negative for dealing damage, positive for healing ?
;;
;;		... 		: for list.
;;		{a, b, c}	: choice between a, b, or c.
;;		name#n		: name is of type number.
;;		#n			: Number.
;;		#t			: {true, false}
;;		#target		: {'self, 'Unit, 'position}
;;		#f_inv		: {unholyarmor, invisibility}
;;		#f_haste	: {bloodlust, slow, haste, HP, mana, HP_percent, mana_percent}
;;		#f_flag		: {invisibility, bloodlust, unholyarmor, slow, haste, flameshield,
;;				  HP, mana, HP_percent, mana_percent
;;		#flagtype	: {coward, organic, undead, canattack, building}
;;		<condition>	: Same syntax as 'condition
;;
;;	(define-spell	"IdentName"	// Ident name for call in unit
;;		'Showname "ShowName"	// Name show in the engine
;;		'ManaCost #n		// Mana to cast the spell
;;		'range #n		// Range of the spell (0)
;;		'Target #target		// Which target is allowed (None by default)
;;		'Action '({
;;			Blizzard ('fields #n 'shards #n 'damage #n),
;;			CircleOfPower "unit-goal",
;;			DeathAndDecay(fields #n shards #n damage #n),
;;			DeathCoil,
;;			FireBall (ttl #n damage #n),
;;			FlameShield (ttl #n),
;;			Haste (#f_haste #n ...),
;;			Healing (HP#n), // Healing (HP >0) or exorcism (HP < 0)
;;			HolyVision "unit-revealer",
;;			Invisibility (flag #f_inv value #n missile "MissileType")
;;			Polymorph "unittype",
;;			RaiseDead "skeleton",
;;			Runes (ttl #n damage #n),
;;			Summon "UnitType",
;;			Whirlwind (ttl #n)
;;				} )
;;		'sound-when-cast "SoundConfig"
;;		'missile-when-cast "MissileType"
;;		'condition '( {
;;			Enemypresence	(#t range #n),			// enemy in range
;;			DurationEffect	(#t flag #f_flag value #n),	// "f_flag" < #n
;;			Alliance 	#t,				// check the target is allied.
;;			UnitTypeflag	(#t #flagtype),			// Unit is a "type"
;;			...}
;;			)
;;		'autocast '(
;;				range #n
;;				condition (<condition>)// Additional condition
;;				+++order () // which target choose.
;;				)
;;

;;  Declare some unit types used in spells. This is quite accetable, the other
;;  way would be to define can-cast-spell outside unit definitions, not much
;;  of an improvement.
